stages:

  download:
    cmd: bash data/scripts/get_${download.dataset}.sh
    params:
      - params.yaml:
        - download
    outs:
      - data/${download.dataset}

  train:
    cmd: python -m yolo5.train --params params.yaml
    params:
      - params.yaml:
          - train
    deps:
      - data/coco128.yaml # YAML with paths to train/valid data specified
    outs:
      - runs/train/weights/last.pt  # :
          # checkpoint: true
      - runs/train/weights/best.pt  # :
          # checkpoint: true
      - runs/train/labels_correlogram.jpg
      - runs/train/labels.jpg
      - runs/train/train_batch0.jpg
      - runs/train/confusion_matrix.png
      - runs/train/results.png
    metrics:
      - runs/train/results.txt:
          cache: false
      - runs/train/hyp.yaml:
          cache: false
  
  # TODO: should it be here? And detect/export/hubconf stages?
  # SHould they be tracked with dvc? -- Just in dvc, not in pipelines, probably
  test:
     # TODO: add weights from the last stage and other params
    cmd: python -m yolo5.test --params params.yaml
    params:
      - params.yaml:
          - test
    deps: 
      - ${test.weights}
      - runs/train/weights/best.pt
    outs:
      # TODO: optional outputs are commented, cause pipeline fails when they are not created
      # see https://github.com/iterative/dvc/issues/4410
      # - runs/test/F1_curve.png
      # - runs/test/P_curve.png
      - runs/test/confusion_matrix.png
      - runs/test/test_batch0_pred.jpg
      # - runs/test/PR_curve.png
      # - runs/test/R_curve.png
      - runs/test/test_batch0_labels.jpg
 
  detect:
    cmd: python -m yolo5.detect --params params.yaml
    params:
      - params.yaml:
          - detect
    deps:
      - ${detect.weights}
      - runs/train/weights/best.pt
    # outs:
      # should we track runs/detect folder instead of separate pictures?

  export:
    cmd: python -m yolo5.models.export --params params.yaml
    params:
      - params.yaml:
          - export
    deps:
      - ${export.weights}
    outs:
      - runs/export
    # TODO: I'm not specifying outputs because they are optional
    # outs:
    #   - runs/train/weights/best.torchscript.pt
    #   - runs/train/weights/best.onnx
    #   - runs/train/weights/best.mlmodel
